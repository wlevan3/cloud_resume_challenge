name: "Scan and Plan"
on: push
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  actions: read
  security-events: write

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "fs"
          ignore-unfixed: false
          format: "sarif"
          output: "trivy-fs-results.sarif"
          severity: "CRITICAL"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-fs-results.sarif"
          category: "filesystem"

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "config"
          hide-progress: false
          format: "sarif"
          output: "trivy-iac-results.sarif"
          exit-code: "0"
          ignore-unfixed: false
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-iac-results.sarif"
          category: "infrastructure"
  plan:
    needs: [scan]
    runs-on: ubuntu-latest
    # environment: development
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{vars.AWS_ACCOUNT_ID_DEV}}:role/${{vars.ROLE_NAME}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}
      - name: Download Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform -chdir=./infrastructure init
      - name: Create providers.tf
        run: sed -i.tmp "s/AWSREGION/${{vars.AWS_REGION}}/g" ./infrastructure/providers.tf
      - name: Terraform Plan
        run: terraform -chdir=./infrastructure plan -out=development.tfplan  -var-file=./environments/development.tfvars
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: ./infrastructure/development.tfplan
  apply:
    needs: [plan]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{vars.AWS_ACCOUNT_ID_DEV}}:role/${{vars.ROLE_NAME}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: tfplan
      - run: ls -al
      - run: pwd
      - run: ls -al ./infrastructure
      - name: Download Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform -chdir="./infrastructure" init
      - name: Terraform Apply
        run: terraform -chdir="./infrastructure" apply "development.tfplan"
